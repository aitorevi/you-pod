import {
    Box,
    Button, Checkbox,
    Flex,
    FormControl,
    FormLabel,
    Heading, Input,
    Link,
    Stack,
    Text,
    useColorModeValue
} from "@chakra-ui/react";
import {getProviders, getSession, signIn} from "next-auth/react";
import Head from "next/head";
import React from "react";
import {FaGithub, FaGoogle} from "react-icons/fa";

export default function SignInPage({ providers }) {
    return (
        <>
            <Head>
                <title>Podcast</title>
                <meta name="página de podcast para profesionales del sector TIC" content="Generated by create next app"/>
                <meta name="viewport" content="width=device-width, initial-scale=1"/>
                <link rel="icon" href="/favicon.ico"/>
            </Head>
            <Flex
                minH={'100vh'}
                align={'center'}
                justify={'center'}
                bg={useColorModeValue('gray.50', 'gray.800')}>
                <Stack spacing={8} mx={'auto'} maxW={'lg'} py={12} px={6}>
                    <Stack align={'center'}>
                        <Heading fontSize={'4xl'}>Aquí letras degradadas</Heading>
                        <Text fontSize={'lg'} color={'gray.600'}>
                            to enjoy all of our cool <Link color={'purple.600'}>features</Link> ✌️
                        </Text>
                    </Stack>
                    <Box
                        rounded={'lg'}
                        bg={useColorModeValue('white', 'gray.700')}
                        boxShadow={'lg'}
                        p={8}>
                        <Stack spacing={4}>
                            <FormControl id="email">
                                <FormLabel>Email address</FormLabel>
                                <Input type="email"/>
                            </FormControl>
                            <FormControl id="password">
                                <FormLabel>Password</FormLabel>
                                <Input type="password"/>
                            </FormControl>
                            <Stack spacing={6}>
                                <Stack
                                    direction={{base: 'column', sm: 'row'}}
                                    align={'start'}
                                    justify={'space-between'}>
                                    <Checkbox>Recordar</Checkbox>
                                    <Link color={'purple.600'}>Olvidaste el password?</Link>
                                </Stack>
                                <Button
                                    bg={'purple.500'}
                                    color={'white'}
                                    _hover={{
                                        bg: 'purple.600',
                                    }}>
                                    Ingresar
                                </Button>
                                <Button
                                    bg={'red'}
                                    color={'white'}
                                    leftIcon={<FaGoogle />}
                                    onClick={() => signIn('google')}>
                                    Google
                                </Button>
                                <Button
                                    bg={'gray.800'}
                                    color={'white'}
                                    leftIcon={<FaGithub />}
                                    onClick={() => signIn('github')}>
                                    GitHub
                                </Button>
                            </Stack>
                        </Stack>
                    </Box>
                </Stack>
            </Flex>
        </>
    );
}
export const getServerSideProps = async (context) => {
    const providers = await getProviders();
    const session = await getSession(context);
    if (session) {
        return {
            props: { providers },
            redirect: {
                destination: "/",
            },
        };
    }
    return {
        props: { providers },
    };
};