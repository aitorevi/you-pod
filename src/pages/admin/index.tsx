import Head from 'next/head'
import {Inter} from 'next/font/google'
import Nav from '../../../components/navbar'
import FooterSimple from '../../../components/footer'
import React from "react";
import {Button, Heading} from '@chakra-ui/react'
import {Box,Container, Stack, useColorModeValue} from "@chakra-ui/react";

import {useEffect, useState} from "react";
import {AdminPanel} from "../../../components/adminPanel";
import {InitialFocus} from "../../../components/newPodcastModal";
import {ReadPodcastInDB} from "../../../components/crudPodcast";
import {BUILD_ID_FILE} from "next/constants";
import {deleteDoc, doc} from "firebase/firestore";
import {db} from "../../../firebase/firebase";

const inter = Inter({subsets: ['latin']})
export default function Podcast() {
    // interface PodcastData {
    //     url: string;
    //     description: string;
    //     title: string;
    // }

    // const [podcastCollection, setPodcastCollection] = useState<PodcastData[]>([]);

    // useEffect(() => {
    //     const fetchData = async () => {
    //         const dataCollection = collection(db, "podcast");
    //         const dataSnapshot = await getDocs(dataCollection);
    //         const podcastData = dataSnapshot.docs.map((doc) => doc.data() as PodcastData);
    //         setPodcastCollection(podcastData);
    //     };
    //     fetchData().then(r => {
    //     });
    // }, []);
    const DeletePodcastInDB = async (id: string) => {
        {
            await deleteDoc(doc(db, "podcast", id));
            setTimeout(async () => {
                //   window.location.reload()
                readPodcast();
            }, 500);

        }
    }

    const [podcastList, setPodcastList] = useState(null);

    useEffect(() =>  {
        readPodcast();
    },[])
    const readPodcast = async () => {
        const podcasts = await ReadPodcastInDB();
        setPodcastList(podcasts.docs);
    }

    return (
        <>
            <Head>
                <title>Podcast</title>
                <meta name="description" content="Generated by create next app"/>
                <meta name="viewport" content="width=device-width, initial-scale=1"/>
                <link rel="icon" href="/favicon.ico"/>
            </Head>
            <Nav/>
            <Container maxW='5xl'>
                <Box
                    bg={useColorModeValue('white', 'gray.800')}
                    minH={'100vh'}
                    py={2}
                    px={2}
                >
                    <Stack>
                        <Container
                            as={Stack}
                            maxW={'6xl'}
                            //py={1}
                            marginTop='0.5rem'
                            direction={{base: 'column', md: 'row'}}
                            spacing={{base: 4, md: 10}}
                            justify={{base: 'center', md: 'center'}}
                            bg={useColorModeValue('gray.200', 'gray.800')}
                            color={'gray.700'}
                            borderRadius={6}>
                            <Heading
                                size='xl'>
                                Panel de control
                            </Heading>
                        </Container>
                        <Container
                            as={Stack}
                            maxW={'6xl'}
                            //py={1}
                            marginTop='0.5rem'
                            direction={{base: 'column', md: 'row'}}
                            spacing={{base: 4, md: 10}}
                            justify={{base: 'space-between', md: 'space-between'}}
                            align={{base: 'start', md: 'start'}}
                            bg={useColorModeValue('gray.50', 'gray.800')}
                            borderRadius={6}>
                            <InitialFocus/>
                        </Container>
                        {
                            podcastList && podcastList.map( podcast => {
                                return (
                                    <AdminPanel key={podcast.data().title}
                                                url={podcast.data().url}
                                                title={podcast.data().title}
                                                description={podcast.data().description}
                                    />
                                )
                            })
                        }
                    </Stack>
                    <Button onClick={readPodcast}>Reload</Button>
                </Box>
            </Container>
            <footer>
                <FooterSimple/>
            </footer>
        </>
    )
}